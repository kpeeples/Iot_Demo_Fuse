<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <bean id="activemqLocal" class="org.apache.activemq.camel.component.ActiveMQComponent" >
      <property name="connectionFactory">
        <bean class="org.apache.activemq.ActiveMQConnectionFactory">
          <property name="brokerURL" value="vm://localhost?create=false&amp;waitForStart=10000" />
          <property name="userName" value="admin"/>
          <property name="password" value="admin"/>
        </bean>
      </property>
    </bean>
        
    <bean id="bindyDataformat" class="org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat">
  		<argument value="com.redhat.demo.iot.controller.receiver.data.DataSetString" />
  	</bean>

  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
  <route id="controller_receiver">
    <from uri="activemqLocal:queue:message.receive"/>
    <choice>
      <when>
        <simple>${body} contains '?xml'</simple>
        <to uri="activemqLocal:queue:message.to.router"/>
      </when>
      <otherwise>
        <unmarshal ref="bindyDataformat"/>
        <marshal>
          <jaxb contextPath="com.redhat.demo.iot.controller.receiver.data"/>
        </marshal>
        <convertBodyTo type="String"/>
        <log message="${body}"/>
        <to uri="activemqLocal:queue:message.to.router"/>
      </otherwise>
    </choice>
  </route>
  <route id="controller_router">
    <from uri="activemqLocal:queue:message.to.router"/>
    <log message="${body}"/>
    <choice>
      <when>
        <xpath>dataSet/deviceType = "0"</xpath>
        <to uri="activemqLocal:queue:message.to.pressure"/>
      </when>
      <when>
        <xpath>dataSet/deviceType = "1"</xpath>
        <to uri="activemqLocal:queue:message.to.temperature"/>
      </when>
      <otherwise>
        <to uri="activemqLocal:queue:message.to.unknown"/>
      </otherwise>
    </choice>
  </route>
  
  <route id="controller_temperature">
    <from uri="activemqLocal:queue:message.to.temperature"/>
    <log message="${body}"/>
    <choice>
      <when>
        <xpath>dataSet/unit = "C"</xpath>
        <log message="Temperature received as Celsius, so nothing to do"/>
        <to uri="activemqLocal:queue:message.to.cep"/>
      </when>
      <otherwise>
        <log message="Temperature received as Fahrenheit, we need to convert the data"/>
        <bean method="f2c" beanType="com.redhat.demo.iot.controller.temperature.Converter"/>
    	<log message="${body}"/>
    	<convertBodyTo type="java.lang.String"/>
        <to uri="activemqLocal:queue:message.to.cep?jmsMessageType=Text"/>
      </otherwise>
    </choice>

  </route>
  
</camelContext>

</blueprint>
